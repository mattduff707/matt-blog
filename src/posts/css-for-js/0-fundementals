---
date: "03/10/2021 9:43AM"
title: "Module 0: Fundamentals Recap"
category: "CSS"
tags: ["Css"]
description: "Recap of fundamental knowledge for CSS"
---

## CSS Terminology

**Properties:** Attributes you can specify values for.

```css
p {
  color: red; /* Color would be the **property** */
}
```

**Selector:** A descriptor that lets you target specific elements on the page.

```css
.apple {
  /* The selector is the class name 'apple'. All nodes with the class name apple will be targeted */
  color: red;
}
```

**Declaration:** A declaration is a combination of a property and a value.

```css
.apple {
  color: red; /*The combination of the property 'color' and the value 'red' is the **declaration** */
}
```

**Rule:** AKA a style. A rule is a collection of declarations, targeting one or more selectors. A stylesheet is made up of multiple rules

```css
/*The entire code snippet would be a "Rule" */
.apple {
  color: red;
  font-size: 24px;
}
```

## Media Queries

Media queries can be similarly thought of as 'if' statements

```js
if (condition) {
  // do something if condition is true
}
```

```css
@media (condition) {
  /*Some CSS that will run if the condition is met*/
}
```

## Selectors

### Pseudo-classes

A pseudo-class is a selector modifier; it will apply its declarations when some sort of condition or state is met

**Focus:** In HTML there is always an "active element". This is the element that is currently selected. When an interactive element is clicked or targeted via tab key that element is now focused.

**Checked:** Applies to checkboxes and radio buttons that are "filled in".

**Combinators:** Combination of multiple selectors.

**Descendent Selector**

```css
nav a {
  color: red;
  font-weight: bold;
}
/*In this example all 'a' tags who are descendants of the 'nav' tag will have these styles applied to them regardless of depth*/
```

```css
nav > a {
  color: red;
  font-weight: bold;
}
/*In this example all 'a' tags who are DIRECT descendants of the 'nav' tag will have these styles applied to it*/
```

**Multiple Selectors**

```css
input,
textarea {
  border: 4px dotted red;
}
/*using comma separation all "input" and "textarea" tags will have these styles applied to them */
/*However, if any of the selectors are invalid the rule wont be applied.
avoid usage with unsupported selectors.
*/
```
